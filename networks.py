import torch.nn as nn
import torch.nn.functional as F


#
# Declaring and defining the network 'EmbeddingNet' that will generate the latent representations of images.
# Latent representations are just fancy name for the embeddings that are generated by the network.
#
class EmbeddingNet(nn.Module):
    def __init__(self):
        super(EmbeddingNet, self).__init__()
        # convlutional layer
        self.convnet = nn.Sequential(
            nn.Conv2d(in_channels=1, out_channels=32, kernel_size=5), nn.PReLU(), nn.MaxPool2d(kernel_size=2, stride=2),
            nn.Conv2d(in_channels=32, out_channels=64, kernel_size=5), nn.PReLU(), nn.MaxPool2d(kernel_size=2, stride=2)
        )